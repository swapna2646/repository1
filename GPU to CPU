import cv2
import easyocr
import matplotlib.pyplot as plt
import time

# Define paths
video_path = 'video.mp4'  # Replace with your video file
output_path_gpu = 'output_gpu.avi'
output_path_cpu = 'output_cpu.avi'

# Initialize EasyOCR readers
reader_gpu = easyocr.Reader(['en'], gpu=True)  # GPU-based model
reader_cpu = easyocr.Reader(['en'], gpu=False)  # CPU-based model

# Define function for processing video with OCR
def process_video(reader, video_path, output_path, device_name):
    cap = cv2.VideoCapture(video_path)

    # Get video properties
    frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    fps = int(cap.get(cv2.CAP_PROP_FPS))
    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    out = cv2.VideoWriter(output_path, fourcc, fps, (frame_width, frame_height))

    frame_count = 0
    start_time = time.time()

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break

        # Perform OCR on every frame
        results = reader.readtext(frame)

        # Annotate frame with OCR results
        for bbox, text, score in results:
            if score > 0.25:  # Confidence threshold
                cv2.rectangle(frame, tuple(map(int, bbox[0])), tuple(map(int, bbox[2])), (0, 255, 0), 2)
                cv2.putText(frame, text, tuple(map(int, bbox[0])), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 2)

        # Write annotated frame to output video
        out.write(frame)

        frame_count += 1

    cap.release()
    out.release()
    end_time = time.time()

    elapsed_time = end_time - start_time
    processing_fps = frame_count / elapsed_time if elapsed_time > 0 else 0

    print(f"{device_name} Processing Summary:")
    print(f"Processed {frame_count} frames in {elapsed_time:.2f} seconds.")
    print(f"FPS: {processing_fps:.2f}\n")
    return processing_fps

# Process the video with GPU-based OCR
print("Processing with GPU-based OCR...")
fps_gpu = process_video(reader_gpu, video_path, output_path_gpu, "GPU")

# Process the video with CPU-based OCR
print("Processing with CPU-based OCR...")
fps_cpu = process_video(reader_cpu, video_path, output_path_cpu, "CPU")

# Display Comparative Analysis
print("Comparative Analysis:")
print(f"GPU FPS: {fps_gpu:.2f}")
print(f"CPU FPS: {fps_cpu:.2f}")
print("Outputs saved as:", output_path_gpu, "and", output_path_cpu)
